(define-module  (watch play-show)
  #:export      (play-show-db)
  #:use-module  (ice-9 ftw)
  #:use-module  (watch show-utils)
  #:use-module ((watch config)
                  #:prefix config:))

(define (play-show-db show-name)
  (let* ((show-list (read-show-list-db))
         (show (find-show show-name show-list)))
    (if (not show) 
      (throw 'show-not-found-exception)
      (let ((episode-path-list (read-episode-path-list show)))
        (if (episode-out-of-bounds? show-current-episode episode-path-list)
          (throw 'episode-out-of-bounds-exception)
          (let ((return-value (play-episode (list-ref episode-path-list show-current-episode))))
            (if (not (zero? return-value))
              (throw 'external-command-fail-exception))))))))

(define (play-episode episode-path)
  (system (string-append config:media-player-command episode-path)))
